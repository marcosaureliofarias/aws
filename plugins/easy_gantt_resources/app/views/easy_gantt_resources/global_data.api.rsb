api.easy_resource_data do
  api.resources_start_date @period[:from]
  api.resources_end_date @period[:to]

  if @issues
    api.array :issues do
      @issues.each do |issue|
        api.issue do
          api.id issue.id
          api.name issue.subject
          api.assigned_to_id issue.assigned_to_id
          api.spent issue.spent_hours
          api.resources @issues_resources[issue.id]
          api.allocator issue.resource_allocator
          api.start_date issue.start_date
          api.due_date issue.due_date
          api.estimated_hours issue.estimated_hours
          api.done_ratio issue.done_ratio
          api.closed issue.closed?
          api.fixed_version_id issue.fixed_version_id
          api.overdue issue.overdue?
          api.parent_issue_id issue.parent_id
          api.project_id issue.project_id

          if EasySetting.value(:easy_gantt_resources_show_task_soonest_start)
            api.soonest_start issue.soonest_start
          end

          if EasySetting.value(:easy_gantt_resources_show_task_latest_due)
            api.latest_due issue.gantt_latest_due
          end

          api.is_planned !!issue.project.try(:is_planned)

          api.permissions do
            api.editable issue.gantt_editable?
            api.allocator_editable issue.custom_resource_allocator_enabled?
          end

          api.array :columns do
            @query.columns.each do |c|
              api.column do
                api.name c.name
                api.value gantt_format_column(issue, c, c.value(issue))
              end
            end
          end

        end
      end
    end
  end

  api_render_projects(api, @projects) if @projects
  api_render_users(api, @users) if @users
  api_render_versions(api, @issues_versions) if @issues_versions
  api_render_columns(api, @query)
  api_render_reservations(api, @reservations) if @reservations
end
