<div class="box">
  <%= hidden_field_tag :project_id, @project.id %>
  <fieldset>
    <legend><%= t(:re_common_attributes) %></legend>

    <div class="splitcontentleft">
      <%= hidden_field_tag :parent_artifact_id, @parent.nil? ? '' : @parent.id, {:id => 'parent_artifact_id'} %>
      <%= hidden_field_tag :sibling_id, @sibling.nil? ? '' : @sibling.id, {:id => 'sibling_id'} %>
      <p>
      <% unless @sibling.nil? %>
        <%= label_tag :parent_autocomplete, l(:re_set_parent), {:class => 'jstree-drop'} %><%= text_field_tag 'parent_artifact', @sibling.nil? ? '' : @sibling.name, {:size => 30, :class => 'autocomplete jstree-drop', :id => 'parent_autocomplete'} %>
      <% else %>
        <%= label_tag :parent_autocomplete, l(:re_set_parent), {:class => 'jstree-drop'} %><%= text_field_tag 'parent_artifact', @parent.nil? ? '' : @parent.name, {:size => 30, :class => 'autocomplete jstree-drop', :id => 'parent_autocomplete'} %>
      <% end %>
      </p>

      <div id="parent_artifact_candidates" class="autocomplete"></div>

      <%

      #TODO: update to jQuery UI

      # javascript_tag do
       #   new Ajax.Autocompleter('parent_autocomplete',
        #  'parent_artifact_candidates',
         # '<%= url_for :controller => 're_artifact_properties', :action => 'autocomplete_parent' %>',
         # { minChars: 3,
        #  paramName: 'parent_name',
        #  parameters: 'project_id=<%= @project.id %><%= '&id=' + properties.id.to_s unless properties.id.blank? %>',
        #  frequency: 0.5,
        #  afterUpdateElement : function(text, li) { $('parent_artifact_id').setValue(li.id) }
        #  });
      %>
      <p>
        <%= f.label :name, l(:re_artifact_name) %> <%= f.text_field :name %>
      </p>
      <%= late_javascript_tag "Form.Element.focus('" + controller.controller_name + "_name');" %>
      <br/>
      <%= number_field_with_slider(controller.controller_name, :priority, 0, 50) %>
    </div>

    <div class="splitcontentright">
      <p>
        <label><%= t(:re_wiki_page_for_artifact) %></label> <%= wiki_page_of_re_artifact(@project, properties) %>
      </p>
		<%
     re_users = []
     re_users << User.current
     re_users.concat User.all.sort_by { |u| u.lastname }
     re_users.uniq!

     selectable_users =  re_users.collect { |u| [u.firstname+" "+ u.lastname, u.id] }
     if !@re_artifact_properties.nil? &&  !@re_artifact_properties.responsible.nil?
     	select_user_id = @re_artifact_properties.responsible.id
     else
     	select_user_id = -1;
     end
  %>
  <p>
        <%= f.label :responsible_id, t(:re_artifact_responsible) %>
        <%= f.select :responsible_id, options_for_select(selectable_users, select_user_id), :include_blank => true %>
   </p>
    </div>

  </fieldset>

  <br/>

  <fieldset>
    <legend><%= t(:re_description_fieldset) %></legend>
    <% unless properties.id.nil? %>
        <div class="contextual">
          <a href="#" accesskey="<%= accesskey(:edit) -%>" class="icon icon-edit" onclick="showAndScrollTo('update-description', '<%=controller.controller_name -%>_description'); return false;"><%= l(:re_update_description) %></a>
        </div>
        <%= textilizable(properties, :description, :only_path => false) %>
        <br/>
    <% end %>
    <div id='update-description' class='redmine-re' <%= 'style="display:none;"' unless properties.id.nil? %>>
      <%= f.text_area :description,
                      :cols => 60,
                      :rows => (properties.description.blank? ? 10 : [[10, properties.description.length / 50].max, 100].min),
                      :accesskey => accesskey(:edit),
                      :class => 'wiki-edit' %>
      <%= wikitoolbar_for controller.controller_name + '_description' %>
    </div>
  </fieldset>

  <fieldset>
    <legend><%= t(:re_associated_issues) %></legend>
    <% unless @issues.nil? %>

        <%= @issues.collect { |issue|
            (link_to issue.subject, issue_path(issue))+'&nbsp'.to_s+
            (link_to '[X]', :controller => 're_artifact_properties', :action => 'remove_issue_from_artifact', :issueid => issue.id, :project_id=>@project.id, :id => @artifact_properties.id) }.to_sentence %>
    <% end %>
  </fieldset>

  <fieldset>
    <legend><%= t(:add_issue_to_requirement) %></legend>


    <div class="splitcontentleft">



  <p>
    <%= text_field_tag :issue, '', {:size => 20, :class => 'autocomplete', :id => 'issue_autocomplete'} %>
  </p>

  <div id="issue_candidates" class="autocomplete"></div>
  <%

   	#TODO: update to jQuery UI

 	#javascript_tag do %>
   	#   new Ajax.Autocompleter('issue_autocomplete',
    #  'issue_candidates',
    #  '<%= url_for :controller => 're_artifact_properties', :action => 'autocomplete_issue' %>',
    #  {
    #  paramName: 'issue_subject',
    #  parameters:
    #  'project_id=<%= @project.id %><%= '&id=' + @artifact_properties_id.to_s unless @artifact_properties_id.blank? %>',
    #  minChars: 1,
    #  frequency: 0.5,
    #  afterUpdateElement : getIssueId});

     # function getIssueId(text, li){

     #     $('#added_issues').append(li.innerHTML + ', ');
     #     $('#added_issues').append('<input id="issue_id" type="hidden" name="issue_id[]" value=' + li.id + ' >');
     #     document.getElementById('issue_autocomplete').value ="";
     # }

    <%# end %>
    %>

</div>

<div class='splitcontentright'>

<div id='added_issues'/>
</div>


</fieldset>

</div>

<%= link_to 'create related Issue', :controller=> 'Issues', :action=>'new', :project_id => @project.id,
    :artifacttype => @artifact.artifact_type, :artifactname => @artifact.name, :displayid => @artifact.id, :associationid => @artifact.artifact_id unless @artifact.id.blank?%>