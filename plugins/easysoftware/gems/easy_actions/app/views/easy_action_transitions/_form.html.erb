<%= labelled_fields_for :easy_action_transition, entity do |f| %>
  <p>
    <%= f.auto_complete :state_from_id, autocomplete_easy_action_sequence_template_easy_action_states_path(entity.easy_action_sequence_template),
                        rootElement: 'entities',
                        label:       EasyActionTransition.human_attribute_name(:state_from_id),
                        preload:     false, required: true,
                        selected:    [value: entity.state_from&.name, id: entity.state_from&.id] %>
  </p>
  <p>
    <%= f.auto_complete :state_to_id, autocomplete_easy_action_sequence_template_easy_action_states_path(entity.easy_action_sequence_template),
                        rootElement: 'entities',
                        label:       EasyActionTransition.human_attribute_name(:state_to_id),
                        preload:     false, required: true,
                        selected:    [value: entity.state_to&.name, id: entity.state_to&.id] %>
  </p>
  <p>
    <%= f.text_field :name, class: 'required' %>
  </p>
  <p>
    <%= f.select :condition_class, [['', '']] + EasyActions::Conditions.registered.map { |klass| [klass, klass] },
                 { class: 'required' },
                 onchange: "javascript:$.ajax({url: '#{j entity.new_record? ? new_polymorphic_path(entity.to_route, format: :js) : edit_polymorphic_path(entity.to_route, format: :js) }', type: 'GET', data: $(this.form).serialize(), processData: false, contentType: false, dataType: 'script'})" %>
  </p>
  <% if entity.condition && lookup_context.template_exists?(entity.condition.view_name, entity.condition.view_folder, true) %>
    <fieldset>
      <legend><%= entity.condition.model_name.human %></legend>
      <%= render entity.condition, entity: entity %>
    </fieldset>
  <% end %>
<% end %>